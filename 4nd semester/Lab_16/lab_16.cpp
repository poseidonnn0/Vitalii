#include <iostream>
#include <fstream>

#define MAX_N 1000

int w[MAX_N]; // массив весов предметов
int c[MAX_N]; // массив стоимостей предметов
int f[MAX_N][MAX_N]; // массив для хранения решения

int main(int argc, char** argv) 
{
    std::ifstream infile; // создание потока ifstream для чтения файла
    std::ofstream outfile; // создание потока ofstream для записи файла
    infile.open("input.txt"); // открытие файла с входными данными
    outfile.open("output.txt"); // создание файла для вывода результата

    int n = 5; // количество предметов
    int m = 10; // вместимость рюкзака

    for (int i = 0; i < n; i++) 
    {
        infile >> w[i] >> c[i]; // считываем вес и стоимость предметов
    }

    // инициализация нулями таблицы f
    for (int i = 0; i <= n; i++) 
    {
        for (int j = 0; j <= m; j++) 
        {
            f[i][j] = 0;
        }
    }

    // заполнение таблицы f
    for (int i = 1; i <= n; i++) 
    {
        for (int j = 1; j <= m; j++) 
        {
            f[i][j] = f[i - 1][j]; // если текущий предмет не помещается в рюкзак, берем предыдущий
            if (j >= w[i - 1]) 
            { // если текущий предмет помещается в рюкзак
                f[i][j] = std::max(f[i][j], f[i - 1][j - w[i - 1]] + c[i - 1]); // сравниваем текущий предмет с предыдущим и выбираем наиболее выгодный вариант
            }
        }
    }

    outfile << "Максимальная стоимость в рюкзаке составляет: " << f[n][m] << std::endl; // выводим максимальную стоимость
    infile.close(); // закрытие потока ввода
    outfile.close(); // закрытие потока вывода
    return 0;
}